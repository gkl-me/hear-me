<%- include('nav') %>

<div class="otp-container my-5 container w-50 d-flex flex-column align-items-center ">

    <div class="text-center">
        <h2>Enter OTP Code</h2>
        <small>One Time Password (OTP) has been sent via Email to</small>

        <b id="OTP-email">
         
            
            <%= email %>

        </b>
    </div>
    <div>
        <h3>Enter OTP </h3>
    </div>
    
    <div>
        <form action="/user/forgotpasswordotp" method="post" id="forgotpasswordotp">

           <div class="d-flex gap-2">  
            <input type="text" minlength="1" maxlength="1" name="otp1" class="otp-input form-input form-control" autocomplete="off">
            <input type="text" minlength="1" maxlength="1"  name="otp2" class="otp-input form-input form-control" autocomplete="off">
            <input type="text" minlength="1" maxlength="1"  name="otp3" class="otp-input form-input form-control" autocomplete="off">
            <input type="text" minlength="1" maxlength="1"  name="otp4" class="otp-input form-input form-control" autocomplete="off">
           </div>

           <input type="hidden" name="otp" id="otp">
        </form>
    </div>

    <div id="otpTimer" class="mt-3"></div>
    <div><a href="/user/forgotpassword-resend/<%= email %>" id="resend-btn" class="btn submit-btn mt-3" style="display: none;">Resend</a></div>

    <button id="verify-btn" class="mt-4 btn submit-btn" form="forgotpasswordotp">Verify</button>

</div>

<script>

    

    const otpInputs = document.querySelectorAll('.otp-input');
    const hiddenOtpInput = document.getElementById('otp');
    const optTimer = document.getElementById('otpTimer')
    const optTime = `<%= otpTime %>`
    const duration = 60 * 2 * 1000;
    const verifyBtn = document.getElementById('verify-btn')
    const resendBtn = document.getElementById('resend-btn')

    otpInputs.forEach((input, index) => {
        input.addEventListener('input', () => {
            if (input.value.length === input.maxLength) {
                const nextInput = otpInputs[index + 1];
                if (nextInput) {
                    nextInput.focus();
                }
            }
            updateHiddenOtpInput();
        });

        input.addEventListener('keydown', (event) => {
            if (event.key === 'Backspace' && input.value.length === 0) {
                const prevInput = otpInputs[index - 1];
                if (prevInput) {
                    prevInput.focus();
                }
            }
        });
    });

    function updateHiddenOtpInput() {
        let otpValue = '';
        otpInputs.forEach(input => {
            otpValue += input.value;
        });
        hiddenOtpInput.value = otpValue;
    }

    function countDown(){
        const interval = setInterval(()=> {
            const now = Date.now()
            let remain = duration - (now-optTime)
        

        if(remain<0){
           
            optTimer.remove();
            verifyBtn.disabled = 'true'
            resendBtn.style.display = 'block'
            clearInterval(interval)

        }

        const min = Math.floor((remain % (1000 * 60 * 60)) / (1000 * 60))
        const sec = Math.floor((remain % (1000 * 60)) / 1000)

        optTimer.innerHTML = `Time remaining: ${min}:${sec < 10 ? 0 : ''}${sec}`
    },1000)
    }


    function validateOtpInputs() {
        for (const input of otpInputs) {
            if (!input.value) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Please fill in all OTP fields.',
                });
                return false;
            }
        }
        return true;
    }

    verifyBtn.addEventListener('click', (event) => {
        if (!validateOtpInputs()) {
            event.preventDefault(); // Prevent form submission
        }
    });

    countDown();

    


</script>

<%- include('../admin/adminFooter') %>