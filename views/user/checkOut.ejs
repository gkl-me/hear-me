<%- include('nav') %>


<link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">

<style>
    body { margin-top: 20px; }
    .card { margin-bottom: 24px; box-shadow: 0 2px 3px #e4e8f0; border-radius: 1rem; }
    .activity-checkout { list-style: none; padding: 0; }
    .activity-checkout .checkout-item { position: relative; padding: 1rem 1rem 1rem 2.5rem; border-left: 2px solid #f5f6f8; }
    .activity-checkout .checkout-item:first-child { border-color: #3b76e1; }
    .activity-checkout .checkout-icon { position: absolute; top: 0; left: 0; }
    .avatar-title { display: flex; align-items: center; justify-content: center; background-color: #3b76e1; color: #fff; height: 100%; width: 100%; font-weight: 500; }
    .form-control { border-radius: 0.75rem; }
    .edit-btn, .add-btn { width: 35px; height: 35px; text-align: center; position: absolute; right: 25px; top: 10px; }
    .card-radio { border: 2px solid #eff0f2; border-radius: .75rem; padding: .5rem; display: block; cursor: pointer; }
    .card-radio-input { display: none; }
    .card-radio-input:checked + .card-radio { border-color: #3b76e1!important; }
    .payment-methods { display: flex; justify-content: space-between; }
    .payment-methods .card-radio-label { flex: 1; margin: 0 10px; }
    .payment-methods .card-radio-label:first-child { margin-left: 0; }
    .payment-methods .card-radio-label:last-child { margin-right: 0; }
    .checkout-item.completed { border-left-color: #3b76e1; }

    .modal-confirm {		
	color: #434e65;
	width: 525px;
}
.modal-confirm .modal-content {
	padding: 20px;
	font-size: 16px;
	border-radius: 5px;
	border: none;
}
.modal-confirm .modal-header {
	background: #47c9a2;
	border-bottom: none;   
	position: relative;
	text-align: center;
	margin: -20px -20px 0;
	border-radius: 5px 5px 0 0;
	padding: 35px;
}
.modal-confirm h4 {
	text-align: center;
	font-size: 36px;
	margin: 10px 0;
}
.modal-confirm .form-control, .modal-confirm .btn {
	min-height: 40px;
	border-radius: 3px; 
}
.modal-confirm .close {
	position: absolute;
	top: 15px;
	right: 15px;
	color: #fff;
	text-shadow: none;
	opacity: 0.5;
}
.modal-confirm .close:hover {
	opacity: 0.8;
}
.modal-confirm .icon-box {
	color: #fff;		
	width: 95px;
	height: 95px;
	display: inline-block;
	border-radius: 50%;
	z-index: 9;
	border: 5px solid #fff;
	padding: 15px;
	text-align: center;
}
.modal-confirm .icon-box i {
	font-size: 64px;
	margin: -4px 0 0 -4px;
}
.modal-confirm.modal-dialog {
	margin-top: 80px;
}
.modal-confirm .btn, .modal-confirm .btn:active {
	color: #fff;
	border-radius: 4px;
	background: #eeb711 !important;
	text-decoration: none;
	transition: all 0.4s;
	line-height: normal;
	border-radius: 30px;
	margin-top: 10px;
	padding: 6px 20px;
	border: none;
}
.modal-confirm .btn:hover, .modal-confirm .btn:focus {
	background: #eda645 !important;
	outline: none;
}
.modal-confirm .btn span {
	margin: 1px 3px 0;
	float: left;
}
.modal-confirm .btn i {
	margin-left: 1px;
	font-size: 20px;
	float: right;
}
.trigger-btn {
	display: inline-block;
	margin: 100px auto;
}

/* #pay-methodoption1:disabled + .wallet-checkout{
    background-color: red;
} */

.wallet-checkout:has(#pay-methodoption1:disabled){
    background-color: #f0f0f0;
}



</style>
</head>
<body>

<div class="container my-5">
<div class="row">
    <div class="col-xl-8">
        <div class="card">
            <div class="card-body">
                <ol class="activity-checkout mb-0 px-4 mt-3">
                    <li class="checkout-item" data-step='1'>
                        <div class="avatar checkout-icon p-1">
                            <div class="avatar-title rounded-circle bg-primary">
                                <i class="bi bi-receipt text-white font-size-20"></i>
                            </div>
                        </div>
                        <h5 class="font-size-16 mb-1">Billing Info</h5>
                        <form id="checkout-form" action="/user/checkout" method="post" onsubmit="submitCheckout(event)" >
                            <div class="row">
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        <label class="form-label" for="billing-name">Name</label>
                                        <input type="text" class="form-control" id="billing-name" name="name" placeholder="Enter name" required>
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        <label class="form-label" for="billing-email-address">Email Address</label>
                                        <input type="email" class="form-control" id="billing-email-address" name="email" placeholder="Enter email" required>
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        <label class="form-label" for="billing-phone">Phone</label>
                                        <input type="text" class="form-control" id="billing-phone" name="phone" placeholder="Enter Phone no." required>
                                    </div>
                                </div>
                            </div>
                    </li>
                    <li class="checkout-item" data-step='2'>
                        <div class="avatar checkout-icon p-1">
                            <div class="avatar-title rounded-circle bg-primary">
                                <i class="bi bi-truck text-white font-size-20"></i>
                            </div>
                        </div>
                        <h5 class="font-size-16 mb-1">Shipping Info</h5>
                        <div class="row">

                            <% user.address.forEach((elem,index) => { %>

                            <div class="col-lg-4 col-sm-6">
                                <label class="card-radio-label mb-0 position-relative">
                                    <input type="radio" name="address" value='<%= elem %>'' id="info-address1" class="card-radio-input">
                                    <div class="card-radio text-truncate p-3">
                                        <span class="fs-14 mb-4 d-block"><%= elem.addressType %></span>
                                        <span class="text-muted fw-normal text-wrap mb-1 d-block"><%= elem.addressLine%></span>
                                        <span class="text-muted fw-normal text-wrap mb-1 d-block"><%= elem.city%></span>
                                        <span class="text-muted fw-normal text-wrap mb-1 d-block"><%= elem.state%></span>
                                        <span class="text-muted fw-normal d-block"><%= elem.pincode%></span>
                                    </div>
                                    <div class="edit-btn bg-light rounded">
                                        <a onclick='deleteAddress(`<%= index %>`)' >
                                            <i class="bi bi-trash font-size-16"></i>
                                        </a>
                                    </div>
                                </label>
                            </div>

                            <% }) %>

                            <div class="col-lg-4 col-sm-6">
                                <div class="add-btn bg-light rounded">
                                    <a href="#" data-bs-toggle="modal" data-bs-target="#addAddressModal" title="Add">
                                        <i class="bi bi-plus font-size-16"></i>
                                    </a>
                                </div>
                            </div>
                        </div>
                    </li>
                    <li class="checkout-item" data-step="3">
                        <div class="avatar checkout-icon p-1">
                            <div class="avatar-title rounded-circle bg-primary">
                                <i class="bi bi-wallet text-white font-size-20"></i>
                            </div>
                        </div>
                        <h5 class="font-size-16 mb-1">Payment Info</h5>
                        <h5 class="font-size-14 mb-3">Payment method :</h5>
                        <div class="payment-methods">
                            <label class="card-radio-label wallet-checkout">
                                <input type="radio" name="paymentMethod" value="wallet" id="pay-methodoption1" class="card-radio-input" <% if (balance < cart.totalPrice) { %>disabled<% } %>>
                                <span class="card-radio py-3 text-center text-truncate">
                                    <i class="bi bi-wallet d-block h2 mb-3"></i>
                                    Wallet (Balance: <%= balance.toFixed(2) %>)
                                </span>
                            </label>
                            <label class="card-radio-label">
                                <input type="radio" name="paymentMethod" value="razor-pay" id="pay-methodoption2" class="card-radio-input">
                                <span class="card-radio wallet-card py-3 text-center text-truncate">
                                    <img src="../../public/assets/razorpay-icon.svg"alt="" width="100px" height="65px">
                                </span>
                            </label>
                            <label class="card-radio-label">
                                <input type="radio" name="paymentMethod" value="cod" id="pay-methodoption4" class="card-radio-input">
                                <span class="card-radio py-3 text-center text-truncate">
                                    <i class="bi bi-cash d-block h2 mb-3"></i>
                                    COD
                                </span>
                            </label>
                        </div>
                    </li>
                </ol>
                </form>
            </div>
        </div>
    </div>
    <div class="col-xl-4">
        <div class="card">
            <div class="card-header">
                <h5 class="font-size-16 mb-0">Order Summary</h5>
            </div>
            <div class="card-body">
                <div class="d-flex gap-2 m-2">
                    <input type="text" id="couponCode" class="form-control" name="couponCode" placeholder="Enter coupon code">
                    <button type="button" id="applyCouponBtn" onclick="applyCoupon()" class="btn submit-btn">Apply</button>
                </div>
                <div id="couponBadge" class="mb-3" style="display: none;">
                    <span class="badge bg-success">Coupon Applied: <span id="appliedCouponCode"></span></span>
                    <button type="button" class="btn btn-danger btn-sm ms-2" onclick="removeCoupon()">Remove</button>
                </div>
                <div class="table-responsive">
                    <table class="table mb-0">
                        <thead>
                            <tr>
                                <th>Product</th>
                                <th>Quantity</th>
                                <th>Price</th>
                            </tr>
                        </thead>
                        <tbody>

                            <% cart.products.forEach((product,index)=>{  %>
                            <tr>
                                <th><%= product.productId.productName %></th>
                                <th><%= product.quantity %></th>
                                <td><i class="bi bi-currency-rupee"></i><%= product.price * product.quantity %></td>
                            </tr>

                            <% } ) %>
                            <tr>
                                <th>Total Price </th>
                                <th></th>
                                <th class="text-"><i class="bi bi-currency-rupee"></i><span id="discountMrp"><%= total.toFixed(2) %></span></th>
                            </tr>
                            <tr>
                                <th>Discount on MRP</th>
                                <th></th>
                                <th class="text-danger">-<i class="bi bi-currency-rupee"></i><span id="discountMrp"><%= (total - cart.totalPrice).toFixed(2) %></span></th>
                            </tr>
                            <tr>
                                <th>Coupon Discount</th>
                                <th></th>
                                <th class="text-danger">-<i class="bi bi-currency-rupee"></i><span id="discountAmount">0.00</span></th>
                            </tr>
                            <tr>
                                <th>Shpping Charge</th>
                                <th></th>
                                <th class="text-success">+<i class="bi bi-currency-rupee"></i><span id="discountAmount"><%=cart.shippingCharge.toFixed(2) %></span></th>
                            </tr>
                            
                        </tbody>
                        <tfoot>
                            <tr>
                                <th>Total  :</th>
                                <th></th>
                                <td><i class="bi bi-currency-rupee"></i><span id="totalPriceCheckout"><%= cart.totalPrice.toFixed(2) %></span></td>
                            </tr>
                        </tfoot>
                    </table>
                </div>
                <div class="mt-4">
                    <div class="alert alert-success" role="alert">
                        <div class="d-flex align-items-center">
                            <i class="bi bi-shield-fill-check h4 me-2"></i>
                            <div class="flex-grow-1">
                                Your order is eligible for FREE Delivery.
                            </div>
                        </div>
                        </div>
                            <div class="mt-3 text-center">
                                <button class="btn submit-btn-light">Cancel</button>
                                <button type="submit" class="btn submit-btn" form="checkout-form">Complete Order</button>
                            </div>
                </div>
            </div>
        </div>
    </div>
</div>
</div>

<!-- Modals -->
<div class="modal fade" id="addAddressModal" tabindex="-1" aria-labelledby="addAddressModalLabel" aria-hidden="true">
<div class="modal-dialog">
    <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title" id="addAddressModalLabel">Add Address</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
            <form id="add-address-form" action="/user/checkout/addAddress" method="post" >
                <div class="mb-3">
                    <label for="address-type" class="form-label">Address Type</label>
                    <select class="form-select" id="address-type" name="addressType">
                        <option value="Home">Home</option>
                        <option value="Work">Work</option>
                        <option value="Other">Other</option>
                    </select>
                </div>
                <div class="mb-3">
                    <label for="address-line" class="form-label">Address Line</label>
                    <input type="text" class="form-control" id="address-line" name="addressLine">
                </div>
                <div class="mb-3">
                    <label for="city" class="form-label">City</label>
                    <input type="text" class="form-control" id="city" name="city">
                </div>
                <div class="mb-3">
                    <label for="state" class="form-label">State</label>
                    <input type="text" class="form-control" id="state" name="state">
                </div>
                <div class="mb-3">
                    <label for="pincode" class="form-label">Pincode</label>
                    <input type="text" class="form-control" id="pincode" name="pincode">
                </div>
                <button  type="submit" class="btn btn-primary">Add Address</button>
            </form>
        </div>
    </div>
</div>
</div>
</div>



<script src="https://checkout.razorpay.com/v1/checkout.js"></script>


<script>


    async function deleteAddress(index){

        try {

            const res = await fetch(`/user/deleteAddress/${index}`,{
            method: 'GET',
            headers : {
                'Content-Type': 'application/json'
            },
        })

        if(res.ok){
            window.location.href = '/user/checkout'
        }else{

            const error = await res.text()

            showError(error);

        }
            
        } catch (error) {
            console.log(`error from delete address fetch checkout ${error}`)
        }

    }

    async function submitCheckout(event){

        event.preventDefault();

    const name = document.getElementById('billing-name').value.trim();
    const email = document.getElementById('billing-email-address').value.trim();
    const phone = document.getElementById('billing-phone').value.trim();
    const address = document.querySelector('input[name="address"]:checked');
    const paymentMethod = document.querySelector('input[name="paymentMethod"]:checked');

    if (!name || !email || !phone) {
        Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: 'Name, Email, and Phone fields cannot be empty or whitespace!'
        });
        return;
    }

    if (!address) {
        Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: 'Please select a shipping address!'
        });
        return;
    }

    if (!paymentMethod) {
        Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: 'Please select a payment method!'
        });
        return;
    }

        try {

            event.preventDefault();

        const couponCode = document.getElementById('couponCode').value;
        const form = document.getElementById('checkout-form')
        const formData = new FormData(form)
        let data = Object.fromEntries(formData.entries());
        data={...data,couponCode:couponCode}

        const res = await fetch('/user/checkout',{
            method: 'POST',
            headers: {
                'Content-Type':'application/json'
            },
            body: JSON.stringify(data)
        })

        if(res.ok){

            if(paymentMethod.value === 'razor-pay'){

                const responseData = await res.json();
                
                const options = {
                    key: 'rzp_test_AIcpmo1LwYwWKt',
                    amount: responseData.amount,
                    currency: "INR",
                    name: 'HearMe',
                    order_id: responseData.razorpayOrderId,
                    handler: async function(response) {
                        try {

                            
                            
                            const resData = {
                                razorpayOrderId: response.razorpay_order_id,
                                paymentId: response.razorpay_payment_id,
                            }

                            const combinedData = { ...data, ...resData };

                            const payment = await fetch('/user/checkout', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify(combinedData)
                            })

                            if(payment.ok){
                                
                                const paymentData = payment.json()

                                window.location.href = '/user/orderSuccess'
                            }

                        } catch (error) {
                            console.log(`handler error ${error}`)
                        }
                    },
                    prefill: {
                        name: name,
                        email: email,
                        contact: phone
                    },
                    notes: {
                        address: address.value
                    },
                    theme: {
                        color: "#3399cc"
                    },
                    "modal": {
                        "ondismiss": function () {
                             window.location.href = '/user/checkout'
                             }
                            }

                }
                const rzp1 = new Razorpay(options);

                rzp1.on('payment.failed', async function (response){

                    const resData = {
                                razorpayOrderId: responseData.razorpayOrderId,
                            }

                    const combinedData = { ...data, ...resData };
                    
                    const res = await fetch('/user/failedpayment',{
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({...combinedData, paymentStatus: 'Pending' })
                    })

                    if(res.ok){

                        const data = await res.json()

                        window.location.href = '/user/orderFailure'
                    }


                })

                rzp1.open()

            }else{


                const data = await res.json()

                window.location.href = '/user/orderSuccess'
            }

            
        }else{

            const error = await res.text()

            showError(error)

        }
            
        } catch (error) {
            console.log(`error from checkout from ${error}`)
        }

    }

    async function applyCoupon(){
        const couponCode = document.getElementById('couponCode').value;

        try {

            const res= await fetch('/user/applycoupon',{
                method: 'POST',
                headers: {
                    'Content-Type':'application/json'
                },
                body: JSON.stringify({couponCode})
            })

            
            if(!res.ok){
                    const error = await res.text()
                    showError(error)
                    
            }else{
                const couponData = await res.json()

                updateTotal(couponData.totalPrice,couponData.discountAmount,couponData.discount);
                showCouponBadge(couponCode);
            }

            

            
        } catch (error) {
            console.log(`applycoupoun error ${error}`)
        }
    }

    function updateTotal(total, discount,percent) {
    const totalElement = document.getElementById('totalPriceCheckout');
    const discountElement = document.getElementById('discountAmount');
    
    if (totalElement && discountElement) {
        totalElement.textContent = total.toFixed(2) 
        discountElement.textContent = `${discount.toFixed(2)} (${percent*100}%)`
    } else {
        console.error('One or both elements not found:', totalElement, discountElement);
    }

    const balance = '<%= balance %>';

    if (total <= balance) {
        document.getElementById('pay-methodoption1').disabled = false;
    } else {
        document.getElementById('pay-methodoption1').disabled = true;
        // document.getElementsByClassName("wallet-checkout")[0].style.backgroundColor = '#fefeeb'
    }
}


    function showCouponBadge(couponCode) {
    const couponBadge = document.getElementById('couponBadge');
    const appliedCouponCode = document.getElementById('appliedCouponCode');
    couponBadge.style.display = 'block';
    appliedCouponCode.innerText = couponCode;
}

function removeCoupon() {
    document.getElementById('couponCode').value = '';
    document.getElementById('couponBadge').style.display = 'none';
    location.reload();
}



// function showModal() {
//     const modalElement = document.getElementById('myModal');
//     const modal = new bootstrap.Modal(modalElement);
//     modal.show();
// }






</script>




<%- include('../admin/adminFooter') %>